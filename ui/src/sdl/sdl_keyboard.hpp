#pragma once

#include <ui/keyboard.hpp>
#include <SDL2/SDL_keyboard.h>

namespace ui::sdl
{
	constexpr modifiers from_sdl(SDL_Keymod key) noexcept
	{
		// modifier values exactly match SDL values
		return modifiers(key);
	}

	constexpr SDL_Keymod to_sdl(modifiers key) noexcept
	{
		// modifier values exactly match SDL values
		return SDL_Keymod(key);
	}

	constexpr keys from_sdl(SDL_Keycode key) noexcept
	{
		switch (key)
		{
		default:
			return keys::unknown;
		case SDLK_RETURN:
			return keys::enter;
		case SDLK_ESCAPE:
			return keys::escape;
		case SDLK_BACKSPACE:
			return keys::backspace;
		case SDLK_TAB:
			return keys::tab;
		case SDLK_SPACE:
			return keys::space;
		case SDLK_EXCLAIM:
			return keys::exclaim;
		case SDLK_QUOTEDBL:
			return keys::quotedbl;
		case SDLK_HASH:
			return keys::hash;
		case SDLK_PERCENT:
			return keys::percent;
		case SDLK_DOLLAR:
			return keys::dollar;
		case SDLK_AMPERSAND:
			return keys::ampersand;
		case SDLK_QUOTE:
			return keys::quote;
		case SDLK_LEFTPAREN:
			return keys::left_paren;
		case SDLK_RIGHTPAREN:
			return keys::right_paren;
		case SDLK_ASTERISK:
			return keys::asterisk;
		case SDLK_PLUS:
			return keys::plus;
		case SDLK_COMMA:
			return keys::comma;
		case SDLK_MINUS:
			return keys::minus;
		case SDLK_PERIOD:
			return keys::period;
		case SDLK_SLASH:
			return keys::slash;
		case SDLK_0:
			return keys::num_0;
		case SDLK_1:
			return keys::num_1;
		case SDLK_2:
			return keys::num_2;
		case SDLK_3:
			return keys::num_3;
		case SDLK_4:
			return keys::num_4;
		case SDLK_5:
			return keys::num_5;
		case SDLK_6:
			return keys::num_6;
		case SDLK_7:
			return keys::num_7;
		case SDLK_8:
			return keys::num_8;
		case SDLK_9:
			return keys::num_9;
		case SDLK_COLON:
			return keys::colon;
		case SDLK_SEMICOLON:
			return keys::semicolon;
		case SDLK_LESS:
			return keys::less;
		case SDLK_EQUALS:
			return keys::equals;
		case SDLK_GREATER:
			return keys::greater;
		case SDLK_QUESTION:
			return keys::question;
		case SDLK_AT:
			return keys::at;
		case SDLK_LEFTBRACKET:
			return keys::left_bracket;
		case SDLK_BACKSLASH:
			return keys::backslash;
		case SDLK_RIGHTBRACKET:
			return keys::right_bracket;
		case SDLK_CARET:
			return keys::caret;
		case SDLK_UNDERSCORE:
			return keys::underscore;
		case SDLK_BACKQUOTE:
			return keys::backquote;
		case SDLK_a:
			return keys::a;
		case SDLK_b:
			return keys::b;
		case SDLK_c:
			return keys::c;
		case SDLK_d:
			return keys::d;
		case SDLK_e:
			return keys::e;
		case SDLK_f:
			return keys::f;
		case SDLK_g:
			return keys::g;
		case SDLK_h:
			return keys::h;
		case SDLK_i:
			return keys::i;
		case SDLK_j:
			return keys::j;
		case SDLK_k:
			return keys::k;
		case SDLK_l:
			return keys::l;
		case SDLK_m:
			return keys::m;
		case SDLK_n:
			return keys::n;
		case SDLK_o:
			return keys::o;
		case SDLK_p:
			return keys::p;
		case SDLK_q:
			return keys::q;
		case SDLK_r:
			return keys::r;
		case SDLK_s:
			return keys::s;
		case SDLK_t:
			return keys::t;
		case SDLK_u:
			return keys::u;
		case SDLK_v:
			return keys::v;
		case SDLK_w:
			return keys::w;
		case SDLK_x:
			return keys::x;
		case SDLK_y:
			return keys::y;
		case SDLK_z:
			return keys::z;
		case SDLK_CAPSLOCK:
			return keys::capslock;
		case SDLK_F1:
			return keys::f1;
		case SDLK_F2:
			return keys::f2;
		case SDLK_F3:
			return keys::f3;
		case SDLK_F4:
			return keys::f4;
		case SDLK_F5:
			return keys::f5;
		case SDLK_F6:
			return keys::f6;
		case SDLK_F7:
			return keys::f7;
		case SDLK_F8:
			return keys::f8;
		case SDLK_F9:
			return keys::f9;
		case SDLK_F10:
			return keys::f10;
		case SDLK_F11:
			return keys::f11;
		case SDLK_F12:
			return keys::f12;
		case SDLK_PRINTSCREEN:
			return keys::printscreen;
		case SDLK_SCROLLLOCK:
			return keys::scroll_lock;
		case SDLK_PAUSE:
			return keys::pause;
		case SDLK_INSERT:
			return keys::insert;
		case SDLK_HOME:
			return keys::home;
		case SDLK_PAGEUP:
			return keys::page_up;
		case SDLK_DELETE:
			return keys::del;
		case SDLK_END:
			return keys::end;
		case SDLK_PAGEDOWN:
			return keys::page_down;
		case SDLK_RIGHT:
			return keys::right;
		case SDLK_LEFT:
			return keys::left;
		case SDLK_DOWN:
			return keys::down;
		case SDLK_UP:
			return keys::up;
		case SDLK_NUMLOCKCLEAR:
			return keys::numlock_clear;
		case SDLK_KP_DIVIDE:
			return keys::kp_divide;
		case SDLK_KP_MULTIPLY:
			return keys::kp_multiply;
		case SDLK_KP_MINUS:
			return keys::kp_minus;
		case SDLK_KP_PLUS:
			return keys::kp_plus;
		case SDLK_KP_ENTER:
			return keys::kp_enter;
		case SDLK_KP_1:
			return keys::kp_1;
		case SDLK_KP_2:
			return keys::kp_2;
		case SDLK_KP_3:
			return keys::kp_3;
		case SDLK_KP_4:
			return keys::kp_4;
		case SDLK_KP_5:
			return keys::kp_5;
		case SDLK_KP_6:
			return keys::kp_6;
		case SDLK_KP_7:
			return keys::kp_7;
		case SDLK_KP_8:
			return keys::kp_8;
		case SDLK_KP_9:
			return keys::kp_9;
		case SDLK_KP_0:
			return keys::kp_0;
		case SDLK_KP_PERIOD:
			return keys::kp_period;
		case SDLK_APPLICATION:
			return keys::application;
		case SDLK_POWER:
			return keys::power;
		case SDLK_KP_EQUALS:
			return keys::kp_equals;
		case SDLK_F13:
			return keys::f13;
		case SDLK_F14:
			return keys::f14;
		case SDLK_F15:
			return keys::f15;
		case SDLK_F16:
			return keys::f16;
		case SDLK_F17:
			return keys::f17;
		case SDLK_F18:
			return keys::f18;
		case SDLK_F19:
			return keys::f19;
		case SDLK_F20:
			return keys::f20;
		case SDLK_F21:
			return keys::f21;
		case SDLK_F22:
			return keys::f22;
		case SDLK_F23:
			return keys::f23;
		case SDLK_F24:
			return keys::f24;
		case SDLK_EXECUTE:
			return keys::execute;
		case SDLK_HELP:
			return keys::help;
		case SDLK_MENU:
			return keys::menu;
		case SDLK_SELECT:
			return keys::select;
		case SDLK_STOP:
			return keys::stop;
		case SDLK_AGAIN:
			return keys::again;
		case SDLK_UNDO:
			return keys::undo;
		case SDLK_CUT:
			return keys::cut;
		case SDLK_COPY:
			return keys::copy;
		case SDLK_PASTE:
			return keys::paste;
		case SDLK_FIND:
			return keys::find;
		case SDLK_MUTE:
			return keys::mute;
		case SDLK_VOLUMEUP:
			return keys::volume_up;
		case SDLK_VOLUMEDOWN:
			return keys::volume_down;
		case SDLK_KP_COMMA:
			return keys::kp_comma;
		case SDLK_KP_EQUALSAS400:
			return keys::kp_equalsas400;
		case SDLK_ALTERASE:
			return keys::alterase;
		case SDLK_SYSREQ:
			return keys::sysreq;
		case SDLK_CANCEL:
			return keys::cancel;
		case SDLK_CLEAR:
			return keys::clear;
		case SDLK_PRIOR:
			return keys::prior;
		case SDLK_RETURN2:
			return keys::return2;
		case SDLK_SEPARATOR:
			return keys::separator;
		case SDLK_OUT:
			return keys::out;
		case SDLK_OPER:
			return keys::oper;
		case SDLK_CLEARAGAIN:
			return keys::clear_again;
		case SDLK_CRSEL:
			return keys::crsel;
		case SDLK_EXSEL:
			return keys::exsel;
		case SDLK_KP_00:
			return keys::kp_00;
		case SDLK_KP_000:
			return keys::kp_000;
		case SDLK_THOUSANDSSEPARATOR:
			return keys::thousands_separator;
		case SDLK_DECIMALSEPARATOR:
			return keys::decimal_separator;
		case SDLK_CURRENCYUNIT:
			return keys::currency_unit;
		case SDLK_CURRENCYSUBUNIT:
			return keys::currency_subunit;
		case SDLK_KP_LEFTPAREN:
			return keys::kp_left_paren;
		case SDLK_KP_RIGHTPAREN:
			return keys::kp_right_paren;
		case SDLK_KP_LEFTBRACE:
			return keys::kp_left_brace;
		case SDLK_KP_RIGHTBRACE:
			return keys::kp_right_brace;
		case SDLK_KP_TAB:
			return keys::kp_tab;
		case SDLK_KP_BACKSPACE:
			return keys::kp_backspace;
		case SDLK_KP_A:
			return keys::kp_a;
		case SDLK_KP_B:
			return keys::kp_b;
		case SDLK_KP_C:
			return keys::kp_c;
		case SDLK_KP_D:
			return keys::kp_d;
		case SDLK_KP_E:
			return keys::kp_e;
		case SDLK_KP_F:
			return keys::kp_f;
		case SDLK_KP_XOR:
			return keys::kp_xor;
		case SDLK_KP_POWER:
			return keys::kp_power;
		case SDLK_KP_PERCENT:
			return keys::kp_percent;
		case SDLK_KP_LESS:
			return keys::kp_less;
		case SDLK_KP_GREATER:
			return keys::kp_greater;
		case SDLK_KP_AMPERSAND:
			return keys::kp_ampersand;
		case SDLK_KP_DBLAMPERSAND:
			return keys::kp_dblampersand;
		case SDLK_KP_VERTICALBAR:
			return keys::kp_verticalbar;
		case SDLK_KP_DBLVERTICALBAR:
			return keys::kp_dblverticalbar;
		case SDLK_KP_COLON:
			return keys::kp_colon;
		case SDLK_KP_HASH:
			return keys::kp_hash;
		case SDLK_KP_SPACE:
			return keys::kp_space;
		case SDLK_KP_AT:
			return keys::kp_at;
		case SDLK_KP_EXCLAM:
			return keys::kp_exclam;
		case SDLK_KP_MEMSTORE:
			return keys::kp_mem_store;
		case SDLK_KP_MEMRECALL:
			return keys::kp_mem_recall;
		case SDLK_KP_MEMCLEAR:
			return keys::kp_mem_clear;
		case SDLK_KP_MEMADD:
			return keys::kp_mem_add;
		case SDLK_KP_MEMSUBTRACT:
			return keys::kp_mem_subtract;
		case SDLK_KP_MEMMULTIPLY:
			return keys::kp_mem_multiply;
		case SDLK_KP_MEMDIVIDE:
			return keys::kp_mem_divide;
		case SDLK_KP_PLUSMINUS:
			return keys::kp_plus_minus;
		case SDLK_KP_CLEAR:
			return keys::kp_clear;
		case SDLK_KP_CLEARENTRY:
			return keys::kp_clear_entry;
		case SDLK_KP_BINARY:
			return keys::kp_binary;
		case SDLK_KP_OCTAL:
			return keys::kp_octal;
		case SDLK_KP_DECIMAL:
			return keys::kp_decimal;
		case SDLK_KP_HEXADECIMAL:
			return keys::kp_hexadecimal;
		case SDLK_LCTRL:
			return keys::left_ctrl;
		case SDLK_LSHIFT:
			return keys::left_shift;
		case SDLK_LALT:
			return keys::left_alt;
		case SDLK_LGUI:
			return keys::left_gui;
		case SDLK_RCTRL:
			return keys::right_ctrl;
		case SDLK_RSHIFT:
			return keys::right_shift;
		case SDLK_RALT:
			return keys::right_alt;
		case SDLK_RGUI:
			return keys::right_gui;
		case SDLK_MODE:
			return keys::mode;
		case SDLK_AUDIONEXT:
			return keys::audio_next;
		case SDLK_AUDIOPREV:
			return keys::audio_prev;
		case SDLK_AUDIOSTOP:
			return keys::audio_stop;
		case SDLK_AUDIOPLAY:
			return keys::audio_play;
		case SDLK_AUDIOMUTE:
			return keys::audio_mute;
		case SDLK_MEDIASELECT:
			return keys::media_select;
		case SDLK_WWW:
			return keys::www;
		case SDLK_MAIL:
			return keys::mail;
		case SDLK_CALCULATOR:
			return keys::calculator;
		case SDLK_COMPUTER:
			return keys::computer;
		case SDLK_AC_SEARCH:
			return keys::ac_search;
		case SDLK_AC_HOME:
			return keys::ac_home;
		case SDLK_AC_BACK:
			return keys::ac_back;
		case SDLK_AC_FORWARD:
			return keys::ac_forward;
		case SDLK_AC_STOP:
			return keys::ac_stop;
		case SDLK_AC_REFRESH:
			return keys::ac_refresh;
		case SDLK_AC_BOOKMARKS:
			return keys::ac_bookmarks;
		case SDLK_BRIGHTNESSDOWN:
			return keys::brightness_down;
		case SDLK_BRIGHTNESSUP:
			return keys::brightness_up;
		case SDLK_DISPLAYSWITCH:
			return keys::display_switch;
		case SDLK_KBDILLUMTOGGLE:
			return keys::kbd_illum_toggle;
		case SDLK_KBDILLUMDOWN:
			return keys::kbd_illum_down;
		case SDLK_KBDILLUMUP:
			return keys::kbd_illum_up;
		case SDLK_EJECT:
			return keys::eject;
		case SDLK_SLEEP:
			return keys::sleep;
		case SDLK_APP1:
			return keys::app1;
		case SDLK_APP2:
			return keys::app2;
		case SDLK_AUDIOREWIND:
			return keys::audio_rewind;
		case SDLK_AUDIOFASTFORWARD:
			return keys::audio_fast_forward;
		}
	}

	constexpr SDL_Keycode to_sdl(keys key) noexcept
	{
		switch (key)
		{
		default:
			return SDLK_UNKNOWN;
		case keys::enter:
			return SDLK_RETURN;
		case keys::escape:
			return SDLK_ESCAPE;
		case keys::backspace:
			return SDLK_BACKSPACE;
		case keys::tab:
			return SDLK_TAB;
		case keys::space:
			return SDLK_SPACE;
		case keys::exclaim:
			return SDLK_EXCLAIM;
		case keys::quotedbl:
			return SDLK_QUOTEDBL;
		case keys::hash:
			return SDLK_HASH;
		case keys::percent:
			return SDLK_PERCENT;
		case keys::dollar:
			return SDLK_DOLLAR;
		case keys::ampersand:
			return SDLK_AMPERSAND;
		case keys::quote:
			return SDLK_QUOTE;
		case keys::left_paren:
			return SDLK_LEFTPAREN;
		case keys::right_paren:
			return SDLK_RIGHTPAREN;
		case keys::asterisk:
			return SDLK_ASTERISK;
		case keys::plus:
			return SDLK_PLUS;
		case keys::comma:
			return SDLK_COMMA;
		case keys::minus:
			return SDLK_MINUS;
		case keys::period:
			return SDLK_PERIOD;
		case keys::slash:
			return SDLK_SLASH;
		case keys::num_0:
			return SDLK_0;
		case keys::num_1:
			return SDLK_1;
		case keys::num_2:
			return SDLK_2;
		case keys::num_3:
			return SDLK_3;
		case keys::num_4:
			return SDLK_4;
		case keys::num_5:
			return SDLK_5;
		case keys::num_6:
			return SDLK_6;
		case keys::num_7:
			return SDLK_7;
		case keys::num_8:
			return SDLK_8;
		case keys::num_9:
			return SDLK_9;
		case keys::colon:
			return SDLK_COLON;
		case keys::semicolon:
			return SDLK_SEMICOLON;
		case keys::less:
			return SDLK_LESS;
		case keys::equals:
			return SDLK_EQUALS;
		case keys::greater:
			return SDLK_GREATER;
		case keys::question:
			return SDLK_QUESTION;
		case keys::at:
			return SDLK_AT;
		case keys::left_bracket:
			return SDLK_LEFTBRACKET;
		case keys::backslash:
			return SDLK_BACKSLASH;
		case keys::right_bracket:
			return SDLK_RIGHTBRACKET;
		case keys::caret:
			return SDLK_CARET;
		case keys::underscore:
			return SDLK_UNDERSCORE;
		case keys::backquote:
			return SDLK_BACKQUOTE;
		case keys::a:
			return SDLK_a;
		case keys::b:
			return SDLK_b;
		case keys::c:
			return SDLK_c;
		case keys::d:
			return SDLK_d;
		case keys::e:
			return SDLK_e;
		case keys::f:
			return SDLK_f;
		case keys::g:
			return SDLK_g;
		case keys::h:
			return SDLK_h;
		case keys::i:
			return SDLK_i;
		case keys::j:
			return SDLK_j;
		case keys::k:
			return SDLK_k;
		case keys::l:
			return SDLK_l;
		case keys::m:
			return SDLK_m;
		case keys::n:
			return SDLK_n;
		case keys::o:
			return SDLK_o;
		case keys::p:
			return SDLK_p;
		case keys::q:
			return SDLK_q;
		case keys::r:
			return SDLK_r;
		case keys::s:
			return SDLK_s;
		case keys::t:
			return SDLK_t;
		case keys::u:
			return SDLK_u;
		case keys::v:
			return SDLK_v;
		case keys::w:
			return SDLK_w;
		case keys::x:
			return SDLK_x;
		case keys::y:
			return SDLK_y;
		case keys::z:
			return SDLK_z;
		case keys::capslock:
			return SDLK_CAPSLOCK;
		case keys::f1:
			return SDLK_F1;
		case keys::f2:
			return SDLK_F2;
		case keys::f3:
			return SDLK_F3;
		case keys::f4:
			return SDLK_F4;
		case keys::f5:
			return SDLK_F5;
		case keys::f6:
			return SDLK_F6;
		case keys::f7:
			return SDLK_F7;
		case keys::f8:
			return SDLK_F8;
		case keys::f9:
			return SDLK_F9;
		case keys::f10:
			return SDLK_F10;
		case keys::f11:
			return SDLK_F11;
		case keys::f12:
			return SDLK_F12;
		case keys::printscreen:
			return SDLK_PRINTSCREEN;
		case keys::scroll_lock:
			return SDLK_SCROLLLOCK;
		case keys::pause:
			return SDLK_PAUSE;
		case keys::insert:
			return SDLK_INSERT;
		case keys::home:
			return SDLK_HOME;
		case keys::page_up:
			return SDLK_PAGEUP;
		case keys::del:
			return SDLK_DELETE;
		case keys::end:
			return SDLK_END;
		case keys::page_down:
			return SDLK_PAGEDOWN;
		case keys::right:
			return SDLK_RIGHT;
		case keys::left:
			return SDLK_LEFT;
		case keys::down:
			return SDLK_DOWN;
		case keys::up:
			return SDLK_UP;
		case keys::numlock_clear:
			return SDLK_NUMLOCKCLEAR;
		case keys::kp_divide:
			return SDLK_KP_DIVIDE;
		case keys::kp_multiply:
			return SDLK_KP_MULTIPLY;
		case keys::kp_minus:
			return SDLK_KP_MINUS;
		case keys::kp_plus:
			return SDLK_KP_PLUS;
		case keys::kp_enter:
			return SDLK_KP_ENTER;
		case keys::kp_1:
			return SDLK_KP_1;
		case keys::kp_2:
			return SDLK_KP_2;
		case keys::kp_3:
			return SDLK_KP_3;
		case keys::kp_4:
			return SDLK_KP_4;
		case keys::kp_5:
			return SDLK_KP_5;
		case keys::kp_6:
			return SDLK_KP_6;
		case keys::kp_7:
			return SDLK_KP_7;
		case keys::kp_8:
			return SDLK_KP_8;
		case keys::kp_9:
			return SDLK_KP_9;
		case keys::kp_0:
			return SDLK_KP_0;
		case keys::kp_period:
			return SDLK_KP_PERIOD;
		case keys::application:
			return SDLK_APPLICATION;
		case keys::power:
			return SDLK_POWER;
		case keys::kp_equals:
			return SDLK_KP_EQUALS;
		case keys::f13:
			return SDLK_F13;
		case keys::f14:
			return SDLK_F14;
		case keys::f15:
			return SDLK_F15;
		case keys::f16:
			return SDLK_F16;
		case keys::f17:
			return SDLK_F17;
		case keys::f18:
			return SDLK_F18;
		case keys::f19:
			return SDLK_F19;
		case keys::f20:
			return SDLK_F20;
		case keys::f21:
			return SDLK_F21;
		case keys::f22:
			return SDLK_F22;
		case keys::f23:
			return SDLK_F23;
		case keys::f24:
			return SDLK_F24;
		case keys::execute:
			return SDLK_EXECUTE;
		case keys::help:
			return SDLK_HELP;
		case keys::menu:
			return SDLK_MENU;
		case keys::select:
			return SDLK_SELECT;
		case keys::stop:
			return SDLK_STOP;
		case keys::again:
			return SDLK_AGAIN;
		case keys::undo:
			return SDLK_UNDO;
		case keys::cut:
			return SDLK_CUT;
		case keys::copy:
			return SDLK_COPY;
		case keys::paste:
			return SDLK_PASTE;
		case keys::find:
			return SDLK_FIND;
		case keys::mute:
			return SDLK_MUTE;
		case keys::volume_up:
			return SDLK_VOLUMEUP;
		case keys::volume_down:
			return SDLK_VOLUMEDOWN;
		case keys::kp_comma:
			return SDLK_KP_COMMA;
		case keys::kp_equalsas400:
			return SDLK_KP_EQUALSAS400;
		case keys::alterase:
			return SDLK_ALTERASE;
		case keys::sysreq:
			return SDLK_SYSREQ;
		case keys::cancel:
			return SDLK_CANCEL;
		case keys::clear:
			return SDLK_CLEAR;
		case keys::prior:
			return SDLK_PRIOR;
		case keys::return2:
			return SDLK_RETURN2;
		case keys::separator:
			return SDLK_SEPARATOR;
		case keys::out:
			return SDLK_OUT;
		case keys::oper:
			return SDLK_OPER;
		case keys::clear_again:
			return SDLK_CLEARAGAIN;
		case keys::crsel:
			return SDLK_CRSEL;
		case keys::exsel:
			return SDLK_EXSEL;
		case keys::kp_00:
			return SDLK_KP_00;
		case keys::kp_000:
			return SDLK_KP_000;
		case keys::thousands_separator:
			return SDLK_THOUSANDSSEPARATOR;
		case keys::decimal_separator:
			return SDLK_DECIMALSEPARATOR;
		case keys::currency_unit:
			return SDLK_CURRENCYUNIT;
		case keys::currency_subunit:
			return SDLK_CURRENCYSUBUNIT;
		case keys::kp_left_paren:
			return SDLK_KP_LEFTPAREN;
		case keys::kp_right_paren:
			return SDLK_KP_RIGHTPAREN;
		case keys::kp_left_brace:
			return SDLK_KP_LEFTBRACE;
		case keys::kp_right_brace:
			return SDLK_KP_RIGHTBRACE;
		case keys::kp_tab:
			return SDLK_KP_TAB;
		case keys::kp_backspace:
			return SDLK_KP_BACKSPACE;
		case keys::kp_a:
			return SDLK_KP_A;
		case keys::kp_b:
			return SDLK_KP_B;
		case keys::kp_c:
			return SDLK_KP_C;
		case keys::kp_d:
			return SDLK_KP_D;
		case keys::kp_e:
			return SDLK_KP_E;
		case keys::kp_f:
			return SDLK_KP_F;
		case keys::kp_xor:
			return SDLK_KP_XOR;
		case keys::kp_power:
			return SDLK_KP_POWER;
		case keys::kp_percent:
			return SDLK_KP_PERCENT;
		case keys::kp_less:
			return SDLK_KP_LESS;
		case keys::kp_greater:
			return SDLK_KP_GREATER;
		case keys::kp_ampersand:
			return SDLK_KP_AMPERSAND;
		case keys::kp_dblampersand:
			return SDLK_KP_DBLAMPERSAND;
		case keys::kp_verticalbar:
			return SDLK_KP_VERTICALBAR;
		case keys::kp_dblverticalbar:
			return SDLK_KP_DBLVERTICALBAR;
		case keys::kp_colon:
			return SDLK_KP_COLON;
		case keys::kp_hash:
			return SDLK_KP_HASH;
		case keys::kp_space:
			return SDLK_KP_SPACE;
		case keys::kp_at:
			return SDLK_KP_AT;
		case keys::kp_exclam:
			return SDLK_KP_EXCLAM;
		case keys::kp_mem_store:
			return SDLK_KP_MEMSTORE;
		case keys::kp_mem_recall:
			return SDLK_KP_MEMRECALL;
		case keys::kp_mem_clear:
			return SDLK_KP_MEMCLEAR;
		case keys::kp_mem_add:
			return SDLK_KP_MEMADD;
		case keys::kp_mem_subtract:
			return SDLK_KP_MEMSUBTRACT;
		case keys::kp_mem_multiply:
			return SDLK_KP_MEMMULTIPLY;
		case keys::kp_mem_divide:
			return SDLK_KP_MEMDIVIDE;
		case keys::kp_plus_minus:
			return SDLK_KP_PLUSMINUS;
		case keys::kp_clear:
			return SDLK_KP_CLEAR;
		case keys::kp_clear_entry:
			return SDLK_KP_CLEARENTRY;
		case keys::kp_binary:
			return SDLK_KP_BINARY;
		case keys::kp_octal:
			return SDLK_KP_OCTAL;
		case keys::kp_decimal:
			return SDLK_KP_DECIMAL;
		case keys::kp_hexadecimal:
			return SDLK_KP_HEXADECIMAL;
		case keys::left_ctrl:
			return SDLK_LCTRL;
		case keys::left_shift:
			return SDLK_LSHIFT;
		case keys::left_alt:
			return SDLK_LALT;
		case keys::left_gui:
			return SDLK_LGUI;
		case keys::right_ctrl:
			return SDLK_RCTRL;
		case keys::right_shift:
			return SDLK_RSHIFT;
		case keys::right_alt:
			return SDLK_RALT;
		case keys::right_gui:
			return SDLK_RGUI;
		case keys::mode:
			return SDLK_MODE;
		case keys::audio_next:
			return SDLK_AUDIONEXT;
		case keys::audio_prev:
			return SDLK_AUDIOPREV;
		case keys::audio_stop:
			return SDLK_AUDIOSTOP;
		case keys::audio_play:
			return SDLK_AUDIOPLAY;
		case keys::audio_mute:
			return SDLK_AUDIOMUTE;
		case keys::media_select:
			return SDLK_MEDIASELECT;
		case keys::www:
			return SDLK_WWW;
		case keys::mail:
			return SDLK_MAIL;
		case keys::calculator:
			return SDLK_CALCULATOR;
		case keys::computer:
			return SDLK_COMPUTER;
		case keys::ac_search:
			return SDLK_AC_SEARCH;
		case keys::ac_home:
			return SDLK_AC_HOME;
		case keys::ac_back:
			return SDLK_AC_BACK;
		case keys::ac_forward:
			return SDLK_AC_FORWARD;
		case keys::ac_stop:
			return SDLK_AC_STOP;
		case keys::ac_refresh:
			return SDLK_AC_REFRESH;
		case keys::ac_bookmarks:
			return SDLK_AC_BOOKMARKS;
		case keys::brightness_down:
			return SDLK_BRIGHTNESSDOWN;
		case keys::brightness_up:
			return SDLK_BRIGHTNESSUP;
		case keys::display_switch:
			return SDLK_DISPLAYSWITCH;
		case keys::kbd_illum_toggle:
			return SDLK_KBDILLUMTOGGLE;
		case keys::kbd_illum_down:
			return SDLK_KBDILLUMDOWN;
		case keys::kbd_illum_up:
			return SDLK_KBDILLUMUP;
		case keys::eject:
			return SDLK_EJECT;
		case keys::sleep:
			return SDLK_SLEEP;
		case keys::app1:
			return SDLK_APP1;
		case keys::app2:
			return SDLK_APP2;
		case keys::audio_rewind:
			return SDLK_AUDIOREWIND;
		case keys::audio_fast_forward:
			return SDLK_AUDIOFASTFORWARD;
		}
	}

	constexpr scancodes from_sdl(SDL_Scancode code) noexcept
	{
		switch (code)
		{
		default:
			return scancodes::unknown;
		case SDL_SCANCODE_A:
			return scancodes::a;
		case SDL_SCANCODE_B:
			return scancodes::b;
		case SDL_SCANCODE_C:
			return scancodes::c;
		case SDL_SCANCODE_D:
			return scancodes::d;
		case SDL_SCANCODE_E:
			return scancodes::e;
		case SDL_SCANCODE_F:
			return scancodes::f;
		case SDL_SCANCODE_G:
			return scancodes::g;
		case SDL_SCANCODE_H:
			return scancodes::h;
		case SDL_SCANCODE_I:
			return scancodes::i;
		case SDL_SCANCODE_J:
			return scancodes::j;
		case SDL_SCANCODE_K:
			return scancodes::k;
		case SDL_SCANCODE_L:
			return scancodes::l;
		case SDL_SCANCODE_M:
			return scancodes::m;
		case SDL_SCANCODE_N:
			return scancodes::n;
		case SDL_SCANCODE_O:
			return scancodes::o;
		case SDL_SCANCODE_P:
			return scancodes::p;
		case SDL_SCANCODE_Q:
			return scancodes::q;
		case SDL_SCANCODE_R:
			return scancodes::r;
		case SDL_SCANCODE_S:
			return scancodes::s;
		case SDL_SCANCODE_T:
			return scancodes::t;
		case SDL_SCANCODE_U:
			return scancodes::u;
		case SDL_SCANCODE_V:
			return scancodes::v;
		case SDL_SCANCODE_W:
			return scancodes::w;
		case SDL_SCANCODE_X:
			return scancodes::x;
		case SDL_SCANCODE_Y:
			return scancodes::y;
		case SDL_SCANCODE_Z:
			return scancodes::z;
		case SDL_SCANCODE_1:
			return scancodes::num_1;
		case SDL_SCANCODE_2:
			return scancodes::num_2;
		case SDL_SCANCODE_3:
			return scancodes::num_3;
		case SDL_SCANCODE_4:
			return scancodes::num_4;
		case SDL_SCANCODE_5:
			return scancodes::num_5;
		case SDL_SCANCODE_6:
			return scancodes::num_6;
		case SDL_SCANCODE_7:
			return scancodes::num_7;
		case SDL_SCANCODE_8:
			return scancodes::num_8;
		case SDL_SCANCODE_9:
			return scancodes::num_9;
		case SDL_SCANCODE_0:
			return scancodes::num_0;
		case SDL_SCANCODE_RETURN:
			return scancodes::enter;
		case SDL_SCANCODE_ESCAPE:
			return scancodes::escape;
		case SDL_SCANCODE_BACKSPACE:
			return scancodes::backspace;
		case SDL_SCANCODE_TAB:
			return scancodes::tab;
		case SDL_SCANCODE_SPACE:
			return scancodes::space;
		case SDL_SCANCODE_MINUS:
			return scancodes::minus;
		case SDL_SCANCODE_EQUALS:
			return scancodes::equals;
		case SDL_SCANCODE_LEFTBRACKET:
			return scancodes::left_bracket;
		case SDL_SCANCODE_RIGHTBRACKET:
			return scancodes::right_bracket;
		case SDL_SCANCODE_BACKSLASH:
			return scancodes::backslash;
		case SDL_SCANCODE_NONUSHASH:
			return scancodes::non_ushash;
		case SDL_SCANCODE_SEMICOLON:
			return scancodes::semicolon;
		case SDL_SCANCODE_APOSTROPHE:
			return scancodes::apostrophe;
		case SDL_SCANCODE_GRAVE:
			return scancodes::grave;
		case SDL_SCANCODE_COMMA:
			return scancodes::comma;
		case SDL_SCANCODE_PERIOD:
			return scancodes::period;
		case SDL_SCANCODE_SLASH:
			return scancodes::slash;
		case SDL_SCANCODE_CAPSLOCK:
			return scancodes::capslock;
		case SDL_SCANCODE_F1:
			return scancodes::f1;
		case SDL_SCANCODE_F2:
			return scancodes::f2;
		case SDL_SCANCODE_F3:
			return scancodes::f3;
		case SDL_SCANCODE_F4:
			return scancodes::f4;
		case SDL_SCANCODE_F5:
			return scancodes::f5;
		case SDL_SCANCODE_F6:
			return scancodes::f6;
		case SDL_SCANCODE_F7:
			return scancodes::f7;
		case SDL_SCANCODE_F8:
			return scancodes::f8;
		case SDL_SCANCODE_F9:
			return scancodes::f9;
		case SDL_SCANCODE_F10:
			return scancodes::f10;
		case SDL_SCANCODE_F11:
			return scancodes::f11;
		case SDL_SCANCODE_F12:
			return scancodes::f12;
		case SDL_SCANCODE_PRINTSCREEN:
			return scancodes::printscreen;
		case SDL_SCANCODE_SCROLLLOCK:
			return scancodes::scroll_lock;
		case SDL_SCANCODE_PAUSE:
			return scancodes::pause;
		case SDL_SCANCODE_INSERT:
			return scancodes::insert;
		case SDL_SCANCODE_HOME:
			return scancodes::home;
		case SDL_SCANCODE_PAGEUP:
			return scancodes::page_up;
		case SDL_SCANCODE_DELETE:
			return scancodes::del;
		case SDL_SCANCODE_END:
			return scancodes::end;
		case SDL_SCANCODE_PAGEDOWN:
			return scancodes::page_down;
		case SDL_SCANCODE_RIGHT:
			return scancodes::right;
		case SDL_SCANCODE_LEFT:
			return scancodes::left;
		case SDL_SCANCODE_DOWN:
			return scancodes::down;
		case SDL_SCANCODE_UP:
			return scancodes::up;
		case SDL_SCANCODE_NUMLOCKCLEAR:
			return scancodes::numlock_clear;
		case SDL_SCANCODE_KP_DIVIDE:
			return scancodes::kp_divide;
		case SDL_SCANCODE_KP_MULTIPLY:
			return scancodes::kp_multiply;
		case SDL_SCANCODE_KP_MINUS:
			return scancodes::kp_minus;
		case SDL_SCANCODE_KP_PLUS:
			return scancodes::kp_plus;
		case SDL_SCANCODE_KP_ENTER:
			return scancodes::kp_enter;
		case SDL_SCANCODE_KP_1:
			return scancodes::kp_1;
		case SDL_SCANCODE_KP_2:
			return scancodes::kp_2;
		case SDL_SCANCODE_KP_3:
			return scancodes::kp_3;
		case SDL_SCANCODE_KP_4:
			return scancodes::kp_4;
		case SDL_SCANCODE_KP_5:
			return scancodes::kp_5;
		case SDL_SCANCODE_KP_6:
			return scancodes::kp_6;
		case SDL_SCANCODE_KP_7:
			return scancodes::kp_7;
		case SDL_SCANCODE_KP_8:
			return scancodes::kp_8;
		case SDL_SCANCODE_KP_9:
			return scancodes::kp_9;
		case SDL_SCANCODE_KP_0:
			return scancodes::kp_0;
		case SDL_SCANCODE_KP_PERIOD:
			return scancodes::kp_period;
		case SDL_SCANCODE_NONUSBACKSLASH:
			return scancodes::non_usbackslash;
		case SDL_SCANCODE_APPLICATION:
			return scancodes::application;
		case SDL_SCANCODE_POWER:
			return scancodes::power;
		case SDL_SCANCODE_KP_EQUALS:
			return scancodes::kp_equals;
		case SDL_SCANCODE_F13:
			return scancodes::f13;
		case SDL_SCANCODE_F14:
			return scancodes::f14;
		case SDL_SCANCODE_F15:
			return scancodes::f15;
		case SDL_SCANCODE_F16:
			return scancodes::f16;
		case SDL_SCANCODE_F17:
			return scancodes::f17;
		case SDL_SCANCODE_F18:
			return scancodes::f18;
		case SDL_SCANCODE_F19:
			return scancodes::f19;
		case SDL_SCANCODE_F20:
			return scancodes::f20;
		case SDL_SCANCODE_F21:
			return scancodes::f21;
		case SDL_SCANCODE_F22:
			return scancodes::f22;
		case SDL_SCANCODE_F23:
			return scancodes::f23;
		case SDL_SCANCODE_F24:
			return scancodes::f24;
		case SDL_SCANCODE_EXECUTE:
			return scancodes::execute;
		case SDL_SCANCODE_HELP:
			return scancodes::help;
		case SDL_SCANCODE_MENU:
			return scancodes::menu;
		case SDL_SCANCODE_SELECT:
			return scancodes::select;
		case SDL_SCANCODE_STOP:
			return scancodes::stop;
		case SDL_SCANCODE_AGAIN:
			return scancodes::again;
		case SDL_SCANCODE_UNDO:
			return scancodes::undo;
		case SDL_SCANCODE_CUT:
			return scancodes::cut;
		case SDL_SCANCODE_COPY:
			return scancodes::copy;
		case SDL_SCANCODE_PASTE:
			return scancodes::paste;
		case SDL_SCANCODE_FIND:
			return scancodes::find;
		case SDL_SCANCODE_MUTE:
			return scancodes::mute;
		case SDL_SCANCODE_VOLUMEUP:
			return scancodes::volume_up;
		case SDL_SCANCODE_VOLUMEDOWN:
			return scancodes::volume_down;
		case SDL_SCANCODE_KP_COMMA:
			return scancodes::kp_comma;
		case SDL_SCANCODE_KP_EQUALSAS400:
			return scancodes::kp_equalsas400;
		case SDL_SCANCODE_INTERNATIONAL1:
			return scancodes::international1;
		case SDL_SCANCODE_INTERNATIONAL2:
			return scancodes::international2;
		case SDL_SCANCODE_INTERNATIONAL3:
			return scancodes::international3;
		case SDL_SCANCODE_INTERNATIONAL4:
			return scancodes::international4;
		case SDL_SCANCODE_INTERNATIONAL5:
			return scancodes::international5;
		case SDL_SCANCODE_INTERNATIONAL6:
			return scancodes::international6;
		case SDL_SCANCODE_INTERNATIONAL7:
			return scancodes::international7;
		case SDL_SCANCODE_INTERNATIONAL8:
			return scancodes::international8;
		case SDL_SCANCODE_INTERNATIONAL9:
			return scancodes::international9;
		case SDL_SCANCODE_LANG1:
			return scancodes::lang1;
		case SDL_SCANCODE_LANG2:
			return scancodes::lang2;
		case SDL_SCANCODE_LANG3:
			return scancodes::lang3;
		case SDL_SCANCODE_LANG4:
			return scancodes::lang4;
		case SDL_SCANCODE_LANG5:
			return scancodes::lang5;
		case SDL_SCANCODE_LANG6:
			return scancodes::lang6;
		case SDL_SCANCODE_LANG7:
			return scancodes::lang7;
		case SDL_SCANCODE_LANG8:
			return scancodes::lang8;
		case SDL_SCANCODE_LANG9:
			return scancodes::lang9;
		case SDL_SCANCODE_ALTERASE:
			return scancodes::alterase;
		case SDL_SCANCODE_SYSREQ:
			return scancodes::sysreq;
		case SDL_SCANCODE_CANCEL:
			return scancodes::cancel;
		case SDL_SCANCODE_CLEAR:
			return scancodes::clear;
		case SDL_SCANCODE_PRIOR:
			return scancodes::prior;
		case SDL_SCANCODE_RETURN2:
			return scancodes::return2;
		case SDL_SCANCODE_SEPARATOR:
			return scancodes::separator;
		case SDL_SCANCODE_OUT:
			return scancodes::out;
		case SDL_SCANCODE_OPER:
			return scancodes::oper;
		case SDL_SCANCODE_CLEARAGAIN:
			return scancodes::clear_again;
		case SDL_SCANCODE_CRSEL:
			return scancodes::crsel;
		case SDL_SCANCODE_EXSEL:
			return scancodes::exsel;
		case SDL_SCANCODE_KP_00:
			return scancodes::kp_00;
		case SDL_SCANCODE_KP_000:
			return scancodes::kp_000;
		case SDL_SCANCODE_THOUSANDSSEPARATOR:
			return scancodes::thousands_separator;
		case SDL_SCANCODE_DECIMALSEPARATOR:
			return scancodes::decimal_separator;
		case SDL_SCANCODE_CURRENCYUNIT:
			return scancodes::currency_unit;
		case SDL_SCANCODE_CURRENCYSUBUNIT:
			return scancodes::currency_subunit;
		case SDL_SCANCODE_KP_LEFTPAREN:
			return scancodes::kp_left_paren;
		case SDL_SCANCODE_KP_RIGHTPAREN:
			return scancodes::kp_right_paren;
		case SDL_SCANCODE_KP_LEFTBRACE:
			return scancodes::kp_left_brace;
		case SDL_SCANCODE_KP_RIGHTBRACE:
			return scancodes::kp_right_brace;
		case SDL_SCANCODE_KP_TAB:
			return scancodes::kp_tab;
		case SDL_SCANCODE_KP_BACKSPACE:
			return scancodes::kp_backspace;
		case SDL_SCANCODE_KP_A:
			return scancodes::kp_a;
		case SDL_SCANCODE_KP_B:
			return scancodes::kp_b;
		case SDL_SCANCODE_KP_C:
			return scancodes::kp_c;
		case SDL_SCANCODE_KP_D:
			return scancodes::kp_d;
		case SDL_SCANCODE_KP_E:
			return scancodes::kp_e;
		case SDL_SCANCODE_KP_F:
			return scancodes::kp_f;
		case SDL_SCANCODE_KP_XOR:
			return scancodes::kp_xor;
		case SDL_SCANCODE_KP_POWER:
			return scancodes::kp_power;
		case SDL_SCANCODE_KP_PERCENT:
			return scancodes::kp_percent;
		case SDL_SCANCODE_KP_LESS:
			return scancodes::kp_less;
		case SDL_SCANCODE_KP_GREATER:
			return scancodes::kp_greater;
		case SDL_SCANCODE_KP_AMPERSAND:
			return scancodes::kp_ampersand;
		case SDL_SCANCODE_KP_DBLAMPERSAND:
			return scancodes::kp_dblampersand;
		case SDL_SCANCODE_KP_VERTICALBAR:
			return scancodes::kp_verticalbar;
		case SDL_SCANCODE_KP_DBLVERTICALBAR:
			return scancodes::kp_dblverticalbar;
		case SDL_SCANCODE_KP_COLON:
			return scancodes::kp_colon;
		case SDL_SCANCODE_KP_HASH:
			return scancodes::kp_hash;
		case SDL_SCANCODE_KP_SPACE:
			return scancodes::kp_space;
		case SDL_SCANCODE_KP_AT:
			return scancodes::kp_at;
		case SDL_SCANCODE_KP_EXCLAM:
			return scancodes::kp_exclam;
		case SDL_SCANCODE_KP_MEMSTORE:
			return scancodes::kp_mem_store;
		case SDL_SCANCODE_KP_MEMRECALL:
			return scancodes::kp_mem_recall;
		case SDL_SCANCODE_KP_MEMCLEAR:
			return scancodes::kp_mem_clear;
		case SDL_SCANCODE_KP_MEMADD:
			return scancodes::kp_mem_add;
		case SDL_SCANCODE_KP_MEMSUBTRACT:
			return scancodes::kp_mem_subtract;
		case SDL_SCANCODE_KP_MEMMULTIPLY:
			return scancodes::kp_mem_multiply;
		case SDL_SCANCODE_KP_MEMDIVIDE:
			return scancodes::kp_mem_divide;
		case SDL_SCANCODE_KP_PLUSMINUS:
			return scancodes::kp_plus_minus;
		case SDL_SCANCODE_KP_CLEAR:
			return scancodes::kp_clear;
		case SDL_SCANCODE_KP_CLEARENTRY:
			return scancodes::kp_clear_entry;
		case SDL_SCANCODE_KP_BINARY:
			return scancodes::kp_binary;
		case SDL_SCANCODE_KP_OCTAL:
			return scancodes::kp_octal;
		case SDL_SCANCODE_KP_DECIMAL:
			return scancodes::kp_decimal;
		case SDL_SCANCODE_KP_HEXADECIMAL:
			return scancodes::kp_hexadecimal;
		case SDL_SCANCODE_LCTRL:
			return scancodes::left_ctrl;
		case SDL_SCANCODE_LSHIFT:
			return scancodes::left_shift;
		case SDL_SCANCODE_LALT:
			return scancodes::left_alt;
		case SDL_SCANCODE_LGUI:
			return scancodes::left_gui;
		case SDL_SCANCODE_RCTRL:
			return scancodes::right_ctrl;
		case SDL_SCANCODE_RSHIFT:
			return scancodes::right_shift;
		case SDL_SCANCODE_RALT:
			return scancodes::right_alt;
		case SDL_SCANCODE_RGUI:
			return scancodes::right_gui;
		case SDL_SCANCODE_MODE:
			return scancodes::mode;
		case SDL_SCANCODE_AUDIONEXT:
			return scancodes::audio_next;
		case SDL_SCANCODE_AUDIOPREV:
			return scancodes::audio_prev;
		case SDL_SCANCODE_AUDIOSTOP:
			return scancodes::audio_stop;
		case SDL_SCANCODE_AUDIOPLAY:
			return scancodes::audio_play;
		case SDL_SCANCODE_AUDIOMUTE:
			return scancodes::audio_mute;
		case SDL_SCANCODE_MEDIASELECT:
			return scancodes::media_select;
		case SDL_SCANCODE_WWW:
			return scancodes::www;
		case SDL_SCANCODE_MAIL:
			return scancodes::mail;
		case SDL_SCANCODE_CALCULATOR:
			return scancodes::calculator;
		case SDL_SCANCODE_COMPUTER:
			return scancodes::computer;
		case SDL_SCANCODE_AC_SEARCH:
			return scancodes::ac_search;
		case SDL_SCANCODE_AC_HOME:
			return scancodes::ac_home;
		case SDL_SCANCODE_AC_BACK:
			return scancodes::ac_back;
		case SDL_SCANCODE_AC_FORWARD:
			return scancodes::ac_forward;
		case SDL_SCANCODE_AC_STOP:
			return scancodes::ac_stop;
		case SDL_SCANCODE_AC_REFRESH:
			return scancodes::ac_refresh;
		case SDL_SCANCODE_AC_BOOKMARKS:
			return scancodes::ac_bookmarks;
		case SDL_SCANCODE_BRIGHTNESSDOWN:
			return scancodes::brightness_down;
		case SDL_SCANCODE_BRIGHTNESSUP:
			return scancodes::brightness_up;
		case SDL_SCANCODE_DISPLAYSWITCH:
			return scancodes::display_switch;
		case SDL_SCANCODE_KBDILLUMTOGGLE:
			return scancodes::kbd_illum_toggle;
		case SDL_SCANCODE_KBDILLUMDOWN:
			return scancodes::kbd_illum_down;
		case SDL_SCANCODE_KBDILLUMUP:
			return scancodes::kbd_illum_up;
		case SDL_SCANCODE_EJECT:
			return scancodes::eject;
		case SDL_SCANCODE_SLEEP:
			return scancodes::sleep;
		case SDL_SCANCODE_APP1:
			return scancodes::app1;
		case SDL_SCANCODE_APP2:
			return scancodes::app2;
		case SDL_SCANCODE_AUDIOREWIND:
			return scancodes::audio_rewind;
		case SDL_SCANCODE_AUDIOFASTFORWARD:
			return scancodes::audio_fastforward;
		}
	}

	constexpr SDL_Scancode to_sdl(scancodes code) noexcept
	{
		switch (code)
		{
		default:
			return SDL_SCANCODE_UNKNOWN;
		case scancodes::a:
			return SDL_SCANCODE_A;
		case scancodes::b:
			return SDL_SCANCODE_B;
		case scancodes::c:
			return SDL_SCANCODE_C;
		case scancodes::d:
			return SDL_SCANCODE_D;
		case scancodes::e:
			return SDL_SCANCODE_E;
		case scancodes::f:
			return SDL_SCANCODE_F;
		case scancodes::g:
			return SDL_SCANCODE_G;
		case scancodes::h:
			return SDL_SCANCODE_H;
		case scancodes::i:
			return SDL_SCANCODE_I;
		case scancodes::j:
			return SDL_SCANCODE_J;
		case scancodes::k:
			return SDL_SCANCODE_K;
		case scancodes::l:
			return SDL_SCANCODE_L;
		case scancodes::m:
			return SDL_SCANCODE_M;
		case scancodes::n:
			return SDL_SCANCODE_N;
		case scancodes::o:
			return SDL_SCANCODE_O;
		case scancodes::p:
			return SDL_SCANCODE_P;
		case scancodes::q:
			return SDL_SCANCODE_Q;
		case scancodes::r:
			return SDL_SCANCODE_R;
		case scancodes::s:
			return SDL_SCANCODE_S;
		case scancodes::t:
			return SDL_SCANCODE_T;
		case scancodes::u:
			return SDL_SCANCODE_U;
		case scancodes::v:
			return SDL_SCANCODE_V;
		case scancodes::w:
			return SDL_SCANCODE_W;
		case scancodes::x:
			return SDL_SCANCODE_X;
		case scancodes::y:
			return SDL_SCANCODE_Y;
		case scancodes::z:
			return SDL_SCANCODE_Z;
		case scancodes::num_1:
			return SDL_SCANCODE_1;
		case scancodes::num_2:
			return SDL_SCANCODE_2;
		case scancodes::num_3:
			return SDL_SCANCODE_3;
		case scancodes::num_4:
			return SDL_SCANCODE_4;
		case scancodes::num_5:
			return SDL_SCANCODE_5;
		case scancodes::num_6:
			return SDL_SCANCODE_6;
		case scancodes::num_7:
			return SDL_SCANCODE_7;
		case scancodes::num_8:
			return SDL_SCANCODE_8;
		case scancodes::num_9:
			return SDL_SCANCODE_9;
		case scancodes::num_0:
			return SDL_SCANCODE_0;
		case scancodes::enter:
			return SDL_SCANCODE_RETURN;
		case scancodes::escape:
			return SDL_SCANCODE_ESCAPE;
		case scancodes::backspace:
			return SDL_SCANCODE_BACKSPACE;
		case scancodes::tab:
			return SDL_SCANCODE_TAB;
		case scancodes::space:
			return SDL_SCANCODE_SPACE;
		case scancodes::minus:
			return SDL_SCANCODE_MINUS;
		case scancodes::equals:
			return SDL_SCANCODE_EQUALS;
		case scancodes::left_bracket:
			return SDL_SCANCODE_LEFTBRACKET;
		case scancodes::right_bracket:
			return SDL_SCANCODE_RIGHTBRACKET;
		case scancodes::backslash:
			return SDL_SCANCODE_BACKSLASH;
		case scancodes::non_ushash:
			return SDL_SCANCODE_NONUSHASH;
		case scancodes::semicolon:
			return SDL_SCANCODE_SEMICOLON;
		case scancodes::apostrophe:
			return SDL_SCANCODE_APOSTROPHE;
		case scancodes::grave:
			return SDL_SCANCODE_GRAVE;
		case scancodes::comma:
			return SDL_SCANCODE_COMMA;
		case scancodes::period:
			return SDL_SCANCODE_PERIOD;
		case scancodes::slash:
			return SDL_SCANCODE_SLASH;
		case scancodes::capslock:
			return SDL_SCANCODE_CAPSLOCK;
		case scancodes::f1:
			return SDL_SCANCODE_F1;
		case scancodes::f2:
			return SDL_SCANCODE_F2;
		case scancodes::f3:
			return SDL_SCANCODE_F3;
		case scancodes::f4:
			return SDL_SCANCODE_F4;
		case scancodes::f5:
			return SDL_SCANCODE_F5;
		case scancodes::f6:
			return SDL_SCANCODE_F6;
		case scancodes::f7:
			return SDL_SCANCODE_F7;
		case scancodes::f8:
			return SDL_SCANCODE_F8;
		case scancodes::f9:
			return SDL_SCANCODE_F9;
		case scancodes::f10:
			return SDL_SCANCODE_F10;
		case scancodes::f11:
			return SDL_SCANCODE_F11;
		case scancodes::f12:
			return SDL_SCANCODE_F12;
		case scancodes::printscreen:
			return SDL_SCANCODE_PRINTSCREEN;
		case scancodes::scroll_lock:
			return SDL_SCANCODE_SCROLLLOCK;
		case scancodes::pause:
			return SDL_SCANCODE_PAUSE;
		case scancodes::insert:
			return SDL_SCANCODE_INSERT;
		case scancodes::home:
			return SDL_SCANCODE_HOME;
		case scancodes::page_up:
			return SDL_SCANCODE_PAGEUP;
		case scancodes::del:
			return SDL_SCANCODE_DELETE;
		case scancodes::end:
			return SDL_SCANCODE_END;
		case scancodes::page_down:
			return SDL_SCANCODE_PAGEDOWN;
		case scancodes::right:
			return SDL_SCANCODE_RIGHT;
		case scancodes::left:
			return SDL_SCANCODE_LEFT;
		case scancodes::down:
			return SDL_SCANCODE_DOWN;
		case scancodes::up:
			return SDL_SCANCODE_UP;
		case scancodes::numlock_clear:
			return SDL_SCANCODE_NUMLOCKCLEAR;
		case scancodes::kp_divide:
			return SDL_SCANCODE_KP_DIVIDE;
		case scancodes::kp_multiply:
			return SDL_SCANCODE_KP_MULTIPLY;
		case scancodes::kp_minus:
			return SDL_SCANCODE_KP_MINUS;
		case scancodes::kp_plus:
			return SDL_SCANCODE_KP_PLUS;
		case scancodes::kp_enter:
			return SDL_SCANCODE_KP_ENTER;
		case scancodes::kp_1:
			return SDL_SCANCODE_KP_1;
		case scancodes::kp_2:
			return SDL_SCANCODE_KP_2;
		case scancodes::kp_3:
			return SDL_SCANCODE_KP_3;
		case scancodes::kp_4:
			return SDL_SCANCODE_KP_4;
		case scancodes::kp_5:
			return SDL_SCANCODE_KP_5;
		case scancodes::kp_6:
			return SDL_SCANCODE_KP_6;
		case scancodes::kp_7:
			return SDL_SCANCODE_KP_7;
		case scancodes::kp_8:
			return SDL_SCANCODE_KP_8;
		case scancodes::kp_9:
			return SDL_SCANCODE_KP_9;
		case scancodes::kp_0:
			return SDL_SCANCODE_KP_0;
		case scancodes::kp_period:
			return SDL_SCANCODE_KP_PERIOD;
		case scancodes::non_usbackslash:
			return SDL_SCANCODE_NONUSBACKSLASH;
		case scancodes::application:
			return SDL_SCANCODE_APPLICATION;
		case scancodes::power:
			return SDL_SCANCODE_POWER;
		case scancodes::kp_equals:
			return SDL_SCANCODE_KP_EQUALS;
		case scancodes::f13:
			return SDL_SCANCODE_F13;
		case scancodes::f14:
			return SDL_SCANCODE_F14;
		case scancodes::f15:
			return SDL_SCANCODE_F15;
		case scancodes::f16:
			return SDL_SCANCODE_F16;
		case scancodes::f17:
			return SDL_SCANCODE_F17;
		case scancodes::f18:
			return SDL_SCANCODE_F18;
		case scancodes::f19:
			return SDL_SCANCODE_F19;
		case scancodes::f20:
			return SDL_SCANCODE_F20;
		case scancodes::f21:
			return SDL_SCANCODE_F21;
		case scancodes::f22:
			return SDL_SCANCODE_F22;
		case scancodes::f23:
			return SDL_SCANCODE_F23;
		case scancodes::f24:
			return SDL_SCANCODE_F24;
		case scancodes::execute:
			return SDL_SCANCODE_EXECUTE;
		case scancodes::help:
			return SDL_SCANCODE_HELP;
		case scancodes::menu:
			return SDL_SCANCODE_MENU;
		case scancodes::select:
			return SDL_SCANCODE_SELECT;
		case scancodes::stop:
			return SDL_SCANCODE_STOP;
		case scancodes::again:
			return SDL_SCANCODE_AGAIN;
		case scancodes::undo:
			return SDL_SCANCODE_UNDO;
		case scancodes::cut:
			return SDL_SCANCODE_CUT;
		case scancodes::copy:
			return SDL_SCANCODE_COPY;
		case scancodes::paste:
			return SDL_SCANCODE_PASTE;
		case scancodes::find:
			return SDL_SCANCODE_FIND;
		case scancodes::mute:
			return SDL_SCANCODE_MUTE;
		case scancodes::volume_up:
			return SDL_SCANCODE_VOLUMEUP;
		case scancodes::volume_down:
			return SDL_SCANCODE_VOLUMEDOWN;
		case scancodes::kp_comma:
			return SDL_SCANCODE_KP_COMMA;
		case scancodes::kp_equalsas400:
			return SDL_SCANCODE_KP_EQUALSAS400;
		case scancodes::international1:
			return SDL_SCANCODE_INTERNATIONAL1;
		case scancodes::international2:
			return SDL_SCANCODE_INTERNATIONAL2;
		case scancodes::international3:
			return SDL_SCANCODE_INTERNATIONAL3;
		case scancodes::international4:
			return SDL_SCANCODE_INTERNATIONAL4;
		case scancodes::international5:
			return SDL_SCANCODE_INTERNATIONAL5;
		case scancodes::international6:
			return SDL_SCANCODE_INTERNATIONAL6;
		case scancodes::international7:
			return SDL_SCANCODE_INTERNATIONAL7;
		case scancodes::international8:
			return SDL_SCANCODE_INTERNATIONAL8;
		case scancodes::international9:
			return SDL_SCANCODE_INTERNATIONAL9;
		case scancodes::lang1:
			return SDL_SCANCODE_LANG1;
		case scancodes::lang2:
			return SDL_SCANCODE_LANG2;
		case scancodes::lang3:
			return SDL_SCANCODE_LANG3;
		case scancodes::lang4:
			return SDL_SCANCODE_LANG4;
		case scancodes::lang5:
			return SDL_SCANCODE_LANG5;
		case scancodes::lang6:
			return SDL_SCANCODE_LANG6;
		case scancodes::lang7:
			return SDL_SCANCODE_LANG7;
		case scancodes::lang8:
			return SDL_SCANCODE_LANG8;
		case scancodes::lang9:
			return SDL_SCANCODE_LANG9;
		case scancodes::alterase:
			return SDL_SCANCODE_ALTERASE;
		case scancodes::sysreq:
			return SDL_SCANCODE_SYSREQ;
		case scancodes::cancel:
			return SDL_SCANCODE_CANCEL;
		case scancodes::clear:
			return SDL_SCANCODE_CLEAR;
		case scancodes::prior:
			return SDL_SCANCODE_PRIOR;
		case scancodes::return2:
			return SDL_SCANCODE_RETURN2;
		case scancodes::separator:
			return SDL_SCANCODE_SEPARATOR;
		case scancodes::out:
			return SDL_SCANCODE_OUT;
		case scancodes::oper:
			return SDL_SCANCODE_OPER;
		case scancodes::clear_again:
			return SDL_SCANCODE_CLEARAGAIN;
		case scancodes::crsel:
			return SDL_SCANCODE_CRSEL;
		case scancodes::exsel:
			return SDL_SCANCODE_EXSEL;
		case scancodes::kp_00:
			return SDL_SCANCODE_KP_00;
		case scancodes::kp_000:
			return SDL_SCANCODE_KP_000;
		case scancodes::thousands_separator:
			return SDL_SCANCODE_THOUSANDSSEPARATOR;
		case scancodes::decimal_separator:
			return SDL_SCANCODE_DECIMALSEPARATOR;
		case scancodes::currency_unit:
			return SDL_SCANCODE_CURRENCYUNIT;
		case scancodes::currency_subunit:
			return SDL_SCANCODE_CURRENCYSUBUNIT;
		case scancodes::kp_left_paren:
			return SDL_SCANCODE_KP_LEFTPAREN;
		case scancodes::kp_right_paren:
			return SDL_SCANCODE_KP_RIGHTPAREN;
		case scancodes::kp_left_brace:
			return SDL_SCANCODE_KP_LEFTBRACE;
		case scancodes::kp_right_brace:
			return SDL_SCANCODE_KP_RIGHTBRACE;
		case scancodes::kp_tab:
			return SDL_SCANCODE_KP_TAB;
		case scancodes::kp_backspace:
			return SDL_SCANCODE_KP_BACKSPACE;
		case scancodes::kp_a:
			return SDL_SCANCODE_KP_A;
		case scancodes::kp_b:
			return SDL_SCANCODE_KP_B;
		case scancodes::kp_c:
			return SDL_SCANCODE_KP_C;
		case scancodes::kp_d:
			return SDL_SCANCODE_KP_D;
		case scancodes::kp_e:
			return SDL_SCANCODE_KP_E;
		case scancodes::kp_f:
			return SDL_SCANCODE_KP_F;
		case scancodes::kp_xor:
			return SDL_SCANCODE_KP_XOR;
		case scancodes::kp_power:
			return SDL_SCANCODE_KP_POWER;
		case scancodes::kp_percent:
			return SDL_SCANCODE_KP_PERCENT;
		case scancodes::kp_less:
			return SDL_SCANCODE_KP_LESS;
		case scancodes::kp_greater:
			return SDL_SCANCODE_KP_GREATER;
		case scancodes::kp_ampersand:
			return SDL_SCANCODE_KP_AMPERSAND;
		case scancodes::kp_dblampersand:
			return SDL_SCANCODE_KP_DBLAMPERSAND;
		case scancodes::kp_verticalbar:
			return SDL_SCANCODE_KP_VERTICALBAR;
		case scancodes::kp_dblverticalbar:
			return SDL_SCANCODE_KP_DBLVERTICALBAR;
		case scancodes::kp_colon:
			return SDL_SCANCODE_KP_COLON;
		case scancodes::kp_hash:
			return SDL_SCANCODE_KP_HASH;
		case scancodes::kp_space:
			return SDL_SCANCODE_KP_SPACE;
		case scancodes::kp_at:
			return SDL_SCANCODE_KP_AT;
		case scancodes::kp_exclam:
			return SDL_SCANCODE_KP_EXCLAM;
		case scancodes::kp_mem_store:
			return SDL_SCANCODE_KP_MEMSTORE;
		case scancodes::kp_mem_recall:
			return SDL_SCANCODE_KP_MEMRECALL;
		case scancodes::kp_mem_clear:
			return SDL_SCANCODE_KP_MEMCLEAR;
		case scancodes::kp_mem_add:
			return SDL_SCANCODE_KP_MEMADD;
		case scancodes::kp_mem_subtract:
			return SDL_SCANCODE_KP_MEMSUBTRACT;
		case scancodes::kp_mem_multiply:
			return SDL_SCANCODE_KP_MEMMULTIPLY;
		case scancodes::kp_mem_divide:
			return SDL_SCANCODE_KP_MEMDIVIDE;
		case scancodes::kp_plus_minus:
			return SDL_SCANCODE_KP_PLUSMINUS;
		case scancodes::kp_clear:
			return SDL_SCANCODE_KP_CLEAR;
		case scancodes::kp_clear_entry:
			return SDL_SCANCODE_KP_CLEARENTRY;
		case scancodes::kp_binary:
			return SDL_SCANCODE_KP_BINARY;
		case scancodes::kp_octal:
			return SDL_SCANCODE_KP_OCTAL;
		case scancodes::kp_decimal:
			return SDL_SCANCODE_KP_DECIMAL;
		case scancodes::kp_hexadecimal:
			return SDL_SCANCODE_KP_HEXADECIMAL;
		case scancodes::left_ctrl:
			return SDL_SCANCODE_LCTRL;
		case scancodes::left_shift:
			return SDL_SCANCODE_LSHIFT;
		case scancodes::left_alt:
			return SDL_SCANCODE_LALT;
		case scancodes::left_gui:
			return SDL_SCANCODE_LGUI;
		case scancodes::right_ctrl:
			return SDL_SCANCODE_RCTRL;
		case scancodes::right_shift:
			return SDL_SCANCODE_RSHIFT;
		case scancodes::right_alt:
			return SDL_SCANCODE_RALT;
		case scancodes::right_gui:
			return SDL_SCANCODE_RGUI;
		case scancodes::mode:
			return SDL_SCANCODE_MODE;
		case scancodes::audio_next:
			return SDL_SCANCODE_AUDIONEXT;
		case scancodes::audio_prev:
			return SDL_SCANCODE_AUDIOPREV;
		case scancodes::audio_stop:
			return SDL_SCANCODE_AUDIOSTOP;
		case scancodes::audio_play:
			return SDL_SCANCODE_AUDIOPLAY;
		case scancodes::audio_mute:
			return SDL_SCANCODE_AUDIOMUTE;
		case scancodes::media_select:
			return SDL_SCANCODE_MEDIASELECT;
		case scancodes::www:
			return SDL_SCANCODE_WWW;
		case scancodes::mail:
			return SDL_SCANCODE_MAIL;
		case scancodes::calculator:
			return SDL_SCANCODE_CALCULATOR;
		case scancodes::computer:
			return SDL_SCANCODE_COMPUTER;
		case scancodes::ac_search:
			return SDL_SCANCODE_AC_SEARCH;
		case scancodes::ac_home:
			return SDL_SCANCODE_AC_HOME;
		case scancodes::ac_back:
			return SDL_SCANCODE_AC_BACK;
		case scancodes::ac_forward:
			return SDL_SCANCODE_AC_FORWARD;
		case scancodes::ac_stop:
			return SDL_SCANCODE_AC_STOP;
		case scancodes::ac_refresh:
			return SDL_SCANCODE_AC_REFRESH;
		case scancodes::ac_bookmarks:
			return SDL_SCANCODE_AC_BOOKMARKS;
		case scancodes::brightness_down:
			return SDL_SCANCODE_BRIGHTNESSDOWN;
		case scancodes::brightness_up:
			return SDL_SCANCODE_BRIGHTNESSUP;
		case scancodes::display_switch:
			return SDL_SCANCODE_DISPLAYSWITCH;
		case scancodes::kbd_illum_toggle:
			return SDL_SCANCODE_KBDILLUMTOGGLE;
		case scancodes::kbd_illum_down:
			return SDL_SCANCODE_KBDILLUMDOWN;
		case scancodes::kbd_illum_up:
			return SDL_SCANCODE_KBDILLUMUP;
		case scancodes::eject:
			return SDL_SCANCODE_EJECT;
		case scancodes::sleep:
			return SDL_SCANCODE_SLEEP;
		case scancodes::app1:
			return SDL_SCANCODE_APP1;
		case scancodes::app2:
			return SDL_SCANCODE_APP2;
		case scancodes::audio_rewind:
			return SDL_SCANCODE_AUDIOREWIND;
		case scancodes::audio_fastforward:
			return SDL_SCANCODE_AUDIOFASTFORWARD;
		}
	}
}
